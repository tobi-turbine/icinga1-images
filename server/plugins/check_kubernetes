#! /bin/bash

#########THIS part is for Nagios ################################
PROGNAME=`/usr/bin/basename $0`
PROGPATH=`echo $0 | sed -e 's,[\\/][^\\/][^\\/]*$,,'`
REVISION=`echo '$Revision: 1749 $' | sed -e 's/[^0-9.]//g'`
. $PROGPATH/utils.sh

#####################################################################

#Function to print Usage
function usage
{
echo "Usage: $0 -s [apiserver endpoint] -n [minimum number of nodes]"
exit $STATE_UNKNOWN
}


MINIMUM_NODE_COUNT=1
APISERVER=https://kubernetes.default.svc
#####################################################################
# get parameter values in Variables

while test -n "$1"; do
    case "$1" in
         -h)
            usage
            ;;
         -n)
            MINIMUM_NODE_COUNT=$2
            shift
            ;;
         -s)
            APISERVER=$2
            shift
            ;;
         *)
            echo "Unknown argument: $1"
            usage
            ;;
    esac
    shift
done

#####################################################################

TOKEN=$(cat /run/secrets/kubernetes.io/serviceaccount/token)
KUBECTL="kubectl --server $APISERVER --token $TOKEN --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt"

STATUS=$( $KUBECTL get cs --no-headers=true )

if [ "$STATUS" == "" ]; then
        echo "[CRIT] no answer"
        exit $STATE_CRITICAL
fi

ETCD0_HEALTH=$(      echo "$STATUS" | grep etcd-0             | awk -F ' ' '{print $2}' )
ETCD1_HEALTH=$(      echo "$STATUS" | grep etcd-1             | awk -F ' ' '{print $2}' )
ETCD2_HEALTH=$(      echo "$STATUS" | grep etcd-2             | awk -F ' ' '{print $2}' )
SCHEDULER_HEALTH=$(  echo "$STATUS" | grep scheduler          | awk -F ' ' '{print $2}' )
CONTROLLER_HEALTH=$( echo "$STATUS" | grep controller-manager | awk -F ' ' '{print $2}' )
if [ "$ETCD0_HEALTH" != "Healthy" ] || [ "$ETCD1_HEALTH" != "Healthy" ] || [ "$ETCD2_HEALTH" != "Healthy" ] || [ "$SCHEDULER_HEALTH" != "Healthy" ] || [ "$CONTROLLER_HEALTH" != "Healthy" ]
then
	echo "[CRIT] etcd-0 $ETCD0_HEALTH, etcd-1 $ETCD1_HEALTH, etcd-2 $ETCD2_HEALTH, scheduler $SCHEDULER_HEALTH, controller-manager $CONTROLLER_HEALTH"
	exit $STATE_CRITICAL
fi

NODES=$( $KUBECTL get no --no-headers=true | wc -l )
if [ "$NODES" -lt "$MINIMUM_NODE_COUNT" ]
then
	echo "[CRIT] only $NODES nodes Ready, $MINIMUM_NODE_COUNT desired"
	exit $STATE_CRITICAL
fi

BAD_PODS=$( $KUBECTL get --all-namespaces po --no-headers=true | awk -F ' ' '{print $4}' | grep -v Running | grep -v Pending | grep -v Terminating | wc -l )
if [ "$BAD_PODS" -gt "0" ]
then
	echo "[CRIT] $BAD_PODS pods are in a bad state"
	exit $STATE_CRITICAL
fi

echo "[OK] all k8s-components, nodes and pods look healthy"
exit $STATE_OK
